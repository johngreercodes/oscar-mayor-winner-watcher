---
/* 
game plan:
- I have an array of objects for each movie (movies.json)
- For each movie object, take the ID and use it to make an API request for the movie
- Receive data object from request
- Take data object and create a new object in a new array using title, director, runtime, poster, and streaming obtions
- Map over that NewMoviesArray to display content on the page
- Clean up /components/Card.astro
*/
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import * as streamingAvailability from "streaming-availability";
import moviesJson from '../data/movies.json';

const client = new streamingAvailability.Client(new streamingAvailability.Configuration({
	apiKey: import.meta.env.STREAMING_AVAILABILITY_API_KEY
}));

let moviesArray: any[];
moviesArray = [];

for await (const movie of moviesJson[2025]) {
	const data = client.showsApi.getShow({
		id: movie.id,
		country: "us"
	})
	moviesArray.push({
			"title": {data},
			"director": "",
			"runtime": "",
			"poster": "",
			"streamingOptions": ""
		})
}

console.log(moviesArray);

// moviesJson[2025].forEach(element => {
// 	const data = client.showsApi.getShow({
// 		id: element.id,
// 		country: "us"
// 	});
// 	movies.push({
// 		"title": "",
// 		"director": "",
// 		"runtime": "",
// 		"poster": "",
// 		"streamingOptions": ""
// 	})
// 	console.log(data);
// });

// const data = client.showsApi.getShow({
// 	id: moviesJson[2025][0].id,
// 	country: "us"
// });

// console.log("hi");
// console.log(movies);
// console.log("bye");
---

<Layout>
	<header>
		<h1>Let's all go to the movies!</h1>
		<h2>Oscar Mayor Winner Watcher</h2>
	</header>
	<main>
		<section id="year-selector">
			<label>Select a year</label>
			<select>
				<option>2025</option>
			</select>
			<button>Get movies</button>
		</section>	
		<section id="card-grid">
		</section>
	</main>
	<footer>
		<a href="https://johngruyere.com/" target="_blank">Built by Greer</a>
	</footer>	
</Layout>

<style>
	header {
		color: goldenrod;
		height: 1rem;
	}
	main {
		color: goldenrod;
		padding: 1rem 0 0 0;
	}
	#year-selector {
		padding: 1rem;
	}
	#card-grid {
		display: grid;
    	gap: 1rem;
    	grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
	}
	footer {
		color: goldenrod;	
	}
	footer a {
		text-decoration: none;
		color: goldenrod;
	}
	footer a:hover {
		text-decoration: underline;
	}
</style>
